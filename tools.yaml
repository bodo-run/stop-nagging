ecosystems:
  nodejs:
    tools:
      - name: "npm"
        executable: "npm"
        env:
          NPM_CONFIG_UPDATE_NOTIFIER: "false"
        commands:
          - "npm config set update-notifier false"
        skip: false

      - name: "pnpm"
        executable: "pnpm"
        env: {}
        commands:
          - "pnpm config set notify false"
        skip: false

      - name: "yarn"
        executable: "yarn"
        env:
          YARN_IGNORE_PATH: "1"
        commands:
          - "yarn config set enableTelemetry 0"
          - "yarn config set enableGlobalCache 1"
        skip: false

  cloud:
    tools:
      - name: "vercel"
        executable: "vercel"
        env:
          VERCEL_CLI_SKIP_PROMPTS: "1"
        commands: []
        skip: false

      - name: "netlify"
        executable: "netlify"
        env:
          NETLIFY_CLI_DISABLE_VERSION_CHECK: "true"
        commands: []
        skip: false

      - name: "amplify"
        executable: "amplify"
        env:
          AMPLIFY_NO_UPDATE_NOTIFIER: "true"
        commands:
          - "amplify configure project --yes"
        skip: false

  database:
    tools:
      - name: "prisma"
        executable: "prisma"
        env:
          PRISMA_HIDE_UPDATE_MESSAGE: "true"
        commands: []
        skip: false

  frameworks:
    tools:
      - name: "next"
        executable: "next"
        env:
          NEXT_TELEMETRY_DISABLED: "1"
        commands: []
        skip: false

      - name: "gatsby"
        executable: "gatsby"
        env:
          GATSBY_TELEMETRY_DISABLED: "1"
        commands: []
        skip: false

      - name: "angular"
        executable: "ng"
        env:
          NG_CLI_ANALYTICS: "false"
        commands:
          - "ng analytics off"
        skip: false

  python:
    tools:
      - name: "pip"
        executable: "pip"
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: "1"
        commands: []
        skip: false

      - name: "pipenv"
        executable: "pipenv"
        env:
          PIPENV_VERBOSITY: "-1"
          PIPENV_HIDE_EMOJIS: "1"
        commands: []
        skip: false

      - name: "poetry"
        executable: "poetry"
        env: {}
        commands:
          - "poetry config experimental.new-installer false"
        skip: false

      - name: "conda"
        executable: "conda"
        env:
          CONDA_AUTO_UPDATE_CONDA: "false"
        commands:
          - "conda config --set notify_outdated_conda false"
        skip: false

  ruby:
    tools:
      - name: "bundler"
        executable: "bundle"
        env: {}
        commands:
          - "bundle config set disable_version_check true"
          - "bundle config set silence_root_warning true"
        skip: false

  php:
    tools:
      - name: "composer"
        executable: "composer"
        env:
          COMPOSER_DISABLE_XDEBUG_WARN: "1"
        commands:
          - "composer config --global discard-changes true"
        skip: false

  java:
    tools:
      - name: "gradle"
        executable: "gradle"
        env:
          GRADLE_OPTS: "-Dorg.gradle.internal.launcher.welcomeMessageEnabled=false"
        commands:
          - "echo 'org.gradle.caching=false' >> gradle.properties"
          - "echo 'org.gradle.logging.level=QUIET' >> gradle.properties"
        skip: false

      - name: "maven"
        executable: "mvn"
        env:
          MAVEN_OPTS: "-Djansi.force=false"
        commands:
          - "echo '<settings><interactiveMode>false</interactiveMode></settings>' > ~/.m2/settings.xml"
        skip: false

  dotnet:
    tools:
      - name: "dotnet"
        executable: "dotnet"
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: "1"
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "1"
        commands: []
        skip: false

  rust:
    tools:
      - name: "cargo"
        executable: "cargo"
        env:
          CARGO_TERM_PROGRESS_WHEN: "never"
        commands: []
        skip: false

  cloud_providers:
    tools:
      - name: "aws"
        executable: "aws"
        env: {}
        commands: []
        skip: false

      - name: "azure"
        executable: "az"
        env:
          AZURE_CORE_COLLECT_TELEMETRY: "false"
        commands: []
        skip: false

      - name: "gcloud"
        executable: "gcloud"
        env:
          CLOUDSDK_CORE_DISABLE_USAGE_REPORTING: "true"
        commands:
          - "gcloud config set disable_usage_reporting true"
        skip: false

  devops:
    tools:
      - name: "terraform"
        executable: "terraform"
        env:
          CHECKPOINT_DISABLE: "1"
        commands: []
        skip: false
