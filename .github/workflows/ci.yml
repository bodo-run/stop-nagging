name: CI

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Install Node (Windows)
        if: startsWith(matrix.os, 'windows-')
        run: choco install nodejs-lts --no-progress

      - name: Show Node version
        run: node --version || echo "No Node"

      - name: Run tests
        run: cargo test --verbose

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Clippy
        run: cargo clippy -- -D warnings
      - name: Format check
        run: cargo fmt --check

  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: stop-nagging
            asset_name: stop-nagging-x86_64-unknown-linux-gnu.tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: stop-nagging
            asset_name: stop-nagging-x86_64-apple-darwin.tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: stop-nagging
            asset_name: stop-nagging-aarch64-apple-darwin.tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: stop-nagging.exe
            asset_name: stop-nagging-x86_64-pc-windows-msvc.zip
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            artifact_name: stop-nagging.exe
            asset_name: stop-nagging-aarch64-pc-windows-msvc.zip
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
      - name: Build target
        run: cargo build --release --target ${{ matrix.target }}
      - name: Package
        shell: bash
        run: |
          staging="stop-nagging-${{ matrix.target }}"
          mkdir -p "$staging"
          cp "target/${{ matrix.target }}/release/${{ matrix.artifact_name }}" "$staging/"
          if [[ "${{ matrix.asset_name }}" == *.zip ]]; then
            7z a "${{ matrix.asset_name }}" "$staging"
          else
            tar czf "${{ matrix.asset_name }}" "$staging"
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_name }}

  release:
    name: Release
    needs: [test, lint, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v3
        if: steps.semantic.outputs.new_release_published == 'true'
        with:
          path: artifacts
      - name: Move artifacts
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          mv artifacts/*/*.tar.gz ./
          mv artifacts/*/*.zip ./
      - name: Update Release with Artifacts
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.semantic.outputs.new_release_version }}
          files: |
            *.tar.gz
            *.zip
